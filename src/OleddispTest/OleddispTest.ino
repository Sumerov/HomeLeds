#include <Wire.h>

#include <Adafruit_GFX.h>

#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 /*128 width of OLED in pixels*/

#define SCREEN_HEIGHT 32 /*64 height of OLED in pixels*/

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1); /*OLED display connected at I2C pins (SDA, SCL)*/
// 'Logo Hella', 128x32px
const unsigned char epd_bitmap_Logo_Hella [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x1f, 0xcf, 0xc7, 0xc0, 0x00, 0x3f, 0xfe, 0x7f, 0xf1, 0xff, 0xf7, 0x81, 0xff, 0x07, 0xc0, 
	0x7f, 0x9f, 0xcf, 0xcf, 0xe0, 0x00, 0x3f, 0xfe, 0x7f, 0xf8, 0xff, 0xf3, 0x81, 0xef, 0x07, 0xe0, 
	0x73, 0x9c, 0x1f, 0xee, 0xe0, 0x00, 0x3c, 0x00, 0xf0, 0x78, 0xe0, 0x7b, 0xc1, 0xef, 0x0f, 0xe0, 
	0x71, 0x9f, 0x1c, 0xee, 0x60, 0x00, 0x3f, 0xf0, 0xe0, 0x3c, 0xe0, 0x39, 0xc3, 0xcf, 0x0e, 0xf0, 
	0x60, 0x1f, 0x9f, 0xee, 0x60, 0x00, 0x1f, 0xf9, 0xe0, 0x1c, 0xe0, 0x79, 0xe3, 0xce, 0x1e, 0x70, 
	0x60, 0x1f, 0xcf, 0xce, 0x60, 0x00, 0x00, 0xfd, 0xe0, 0x1c, 0xff, 0xf0, 0xe3, 0x8e, 0x1c, 0x78, 
	0x60, 0x09, 0xcf, 0xce, 0x60, 0x00, 0x1f, 0xf9, 0xe0, 0x1c, 0xff, 0xe0, 0xf7, 0x8e, 0x3c, 0x78, 
	0x71, 0x81, 0xc3, 0xce, 0x60, 0x00, 0x3f, 0xf0, 0xe0, 0x3c, 0xe1, 0xe0, 0x77, 0x0e, 0x3f, 0xfc, 
	0x73, 0x9d, 0xc3, 0x8e, 0xe0, 0x00, 0x3c, 0x00, 0xf8, 0xf8, 0xe0, 0xf0, 0x7f, 0x0e, 0x7f, 0xfc, 
	0x7f, 0x9f, 0xc7, 0x8f, 0xe0, 0x00, 0x3c, 0x00, 0x7f, 0xf8, 0xe0, 0xfc, 0x3e, 0x0f, 0x70, 0x1e, 
	0x3f, 0x1f, 0x87, 0x07, 0xe0, 0x00, 0x3c, 0x00, 0x3f, 0xe1, 0xe0, 0x7c, 0x3e, 0x0e, 0xf0, 0x0e, 
	0x1e, 0x07, 0x06, 0x03, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 
	0xe3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x78, 
	0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x0f, 0x83, 0xfc, 
	0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe6, 
	0x6f, 0xb9, 0xf1, 0xfb, 0xf7, 0x9f, 0xfc, 0x73, 0x1f, 0xbe, 0x7c, 0x7e, 0x00, 0x30, 0x00, 0x00, 
	0x7f, 0xfb, 0xf9, 0xfb, 0xff, 0x9f, 0xfe, 0x73, 0x3f, 0xbe, 0xfe, 0x7e, 0x00, 0x71, 0xf9, 0x3f, 
	0x7f, 0xf1, 0xf9, 0xf3, 0xff, 0xdf, 0xfe, 0x73, 0xbf, 0xbc, 0xfe, 0x7c, 0x00, 0x79, 0x99, 0x13, 
	0x7f, 0xf1, 0xf9, 0xc3, 0x99, 0xdc, 0xef, 0x73, 0xbf, 0x1c, 0xff, 0x70, 0x00, 0x7f, 0xd9, 0x1f, 
	0x3d, 0xf3, 0xf9, 0xc3, 0x99, 0xdc, 0xef, 0x73, 0xbf, 0x9c, 0xff, 0x70, 0x00, 0x7b, 0x99, 0xbb, 
	0x3d, 0xe3, 0xf9, 0xc3, 0x99, 0xdc, 0xef, 0x73, 0x9f, 0x9c, 0xfe, 0x70, 0x00, 0x72, 0xdf, 0xf3, 
	0x3d, 0xe3, 0xf9, 0xc3, 0x99, 0xdc, 0xef, 0x7f, 0xbf, 0x9e, 0xfe, 0x70, 0x00, 0x32, 0x00, 0x00, 
	0x38, 0xe3, 0xf9, 0xc3, 0x99, 0xdc, 0xef, 0x3f, 0x3f, 0x9e, 0x7e, 0x70, 0x00, 0x37, 0xff, 0xf6, 
	0x18, 0x41, 0xf9, 0x81, 0x18, 0x8c, 0x46, 0x1f, 0x1f, 0x0c, 0x3c, 0x60, 0x00, 0x1e, 0xff, 0xdc, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x78, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {

  Serial.begin(115200);  /*Baud rate UART communication */
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { /*I2C Address at which OLED will communicate*/
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000);
  display.clearDisplay();  /*Clear display*/
 /*
  display.setTextSize(2); 
  display.setTextColor(WHITE); 
  display.setCursor(0, 10);
  display.println("Linuxhint.com"); 
  display.display();
*/

}

void loop() {
    display.drawBitmap(0, 0, epd_bitmap_Logo_Hella, 128, 32, WHITE);
    display.display();
    delay(10000);
}